{"ast":null,"code":"var _jsxFileName = \"E:\\\\progress\\\\progress\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Paper, Grid, Typography, Container, createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport Icon from './icon';\nimport signinl from '../../images/signin.gif';\nimport { signin, signup } from '../../actions/auth';\nimport { AUTH } from '../../constants/actionTypes';\nimport useStyles from './styles';\nimport Input from './Input';\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst SignUp = () => {\n  const [form, setForm] = useState(initialState);\n  const [isSignup, setIsSignup] = useState(false);\n  const dispatch = useDispatch();\n  const authData = useSelector(state => state.auth.authData);\n  const history = useHistory();\n  const classes = useStyles();\n  const [error, setError] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  const switchMode = () => {\n    setForm(initialState);\n    setIsSignup(prevIsSignup => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isSignup) {\n      dispatch(signup(form, history));\n    } else {\n      dispatch(signin(form, history));\n    }\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: AUTH,\n        data: {\n          result,\n          token\n        }\n      });\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const theme = createMuiTheme({\n    typography: {\n      fontFamily: ['Fresca', 'sans-serif'].join(',')\n    }\n  });\n\n  const googleError = () => console.log('Google Sign In was unsuccessful. Try again later');\n\n  const handleChange = e => setForm({ ...form,\n    [e.target.name]: e.target.value\n  });\n\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, error && /*#__PURE__*/React.createElement(ErrorMessage, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, error), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.avatar,\n    src: signinl,\n    alt: \"icon\",\n    height: \"100px\",\n    width: \"100px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, isSignup ? 'Sign up' : 'Sign in'), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, isSignup && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    name: \"firstName\",\n    label: \"First Name\",\n    handleChange: handleChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    handleChange: handleChange,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    label: \"Email Address\",\n    handleChange: handleChange,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"Password\",\n    handleChange: handleChange,\n    type: showPassword ? 'text' : 'password',\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }), isSignup && /*#__PURE__*/React.createElement(Input, {\n    name: \"confirmPassword\",\n    label: \"Repeat Password\",\n    handleChange: handleChange,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 30\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, isSignup ? 'Sign Up' : 'Sign In'), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"397871205333-ulghgaggkpho2k11dr1jjb2vg29f1qbi.apps.googleusercontent.com\",\n    render: renderProps => /*#__PURE__*/React.createElement(Button, {\n      className: classes.googleButton,\n      fullWidth: true,\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      startIcon: /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 141\n        }\n      }),\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, \"Google Sign In\"),\n    onSuccess: googleSuccess,\n    onFailure: googleError,\n    cookiePolicy: \"single_host_origin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.already,\n    onClick: switchMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\")))))));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["E:/progress/progress/client/src/components/Auth/Auth.js"],"names":["React","useState","useDispatch","useSelector","Button","Paper","Grid","Typography","Container","createMuiTheme","ThemeProvider","useHistory","GoogleLogin","Icon","signinl","signin","signup","AUTH","useStyles","Input","ErrorMessage","initialState","firstName","lastName","email","password","confirmPassword","SignUp","form","setForm","isSignup","setIsSignup","dispatch","authData","state","auth","history","classes","error","setError","showPassword","setShowPassword","handleShowPassword","switchMode","prevIsSignup","handleSubmit","e","preventDefault","googleSuccess","res","result","profileObj","token","tokenId","type","data","push","console","log","theme","typography","fontFamily","join","googleError","handleChange","target","name","value","paper","avatar","submit","renderProps","googleButton","onClick","disabled","already"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Paper, Grid, Typography, Container, createMuiTheme, ThemeProvider } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { GoogleLogin } from 'react-google-login';\r\n\r\n\r\n\r\nimport Icon from './icon';\r\nimport signinl from '../../images/signin.gif';\r\nimport { signin, signup } from '../../actions/auth';\r\nimport { AUTH } from '../../constants/actionTypes';\r\nimport useStyles from './styles';\r\nimport Input from './Input';\r\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\r\n\r\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\r\n\r\nconst SignUp = () => {\r\n  const [form, setForm] = useState(initialState);\r\n  const [isSignup, setIsSignup] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const authData = useSelector((state) => state.auth.authData);\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [error, setError] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleShowPassword = () => setShowPassword(!showPassword);\r\n\r\n\r\n \r\n\r\n  const switchMode = () => {\r\n    setForm(initialState);\r\n    setIsSignup((prevIsSignup) => !prevIsSignup);\r\n    setShowPassword(false);\r\n   \r\n\r\n  };\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  \r\n\r\n\r\n    if (isSignup) {\r\n      dispatch(signup(form, history));\r\n\r\n    } else {\r\n      dispatch(signin(form, history));\r\n      \r\n\r\n    }\r\n  };\r\n\r\n  const googleSuccess = async (res) => {\r\n    const result = res?.profileObj;\r\n    const token = res?.tokenId;\r\n\r\n    try {\r\n      dispatch({ type: AUTH, data: { result, token } });\r\n\r\n      history.push('/');\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n\r\n\r\n    }\r\n  };\r\n  const theme = createMuiTheme({\r\n    typography: {\r\n      fontFamily: [\r\n\r\n        'Fresca',\r\n        'sans-serif'\r\n\r\n      ].join(','),\r\n    }\r\n\r\n  });\r\n\r\n  const googleError = () => console.log('Google Sign In was unsuccessful. Try again later');\r\n\r\n  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\" >\r\n      {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n        <Paper className={classes.paper} elevation={6}>\r\n          <img className={classes.avatar} src={signinl} alt=\"icon\" height=\"100px\" width='100px' />\r\n          <Typography component=\"h1\" variant=\"h5\">{isSignup ? 'Sign up' : 'Sign in'}</Typography>\r\n          <form className={classes.form} onSubmit={handleSubmit} >\r\n\r\n            <Grid container spacing={2}>\r\n\r\n              {isSignup && (\r\n                <>\r\n                  <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\r\n                  <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\r\n\r\n                </>\r\n              )}\r\n              <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\r\n              <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\r\n              {isSignup &&   <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" \r\n              \r\n              \r\n               />}\r\n\r\n            </Grid>\r\n            <Button type=\"submit\" fullWidth variant=\"contained\" className={classes.submit} >\r\n              {isSignup ? 'Sign Up' : 'Sign In'}\r\n            </Button>\r\n           \r\n            <GoogleLogin\r\n              clientId=\"397871205333-ulghgaggkpho2k11dr1jjb2vg29f1qbi.apps.googleusercontent.com\"\r\n              render={(renderProps) => (\r\n                <Button className={classes.googleButton} fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant=\"contained\">\r\n                  Google Sign In\r\n                </Button>\r\n              )}\r\n              onSuccess={googleSuccess}\r\n              onFailure={googleError}\r\n              cookiePolicy=\"single_host_origin\"\r\n\r\n            />\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Button className={classes.already} onClick={switchMode}>\r\n                \r\n                  {isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\"}\r\n                </Button>\r\n\r\n              </Grid>\r\n\r\n            </Grid>\r\n          </form>\r\n        </Paper>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}